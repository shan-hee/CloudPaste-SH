name: Deploy Worker

on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.x'
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          npm ci
          npm install -g wrangler
      
      - name: Configure Wrangler
        run: |
          mkdir -p ~/.wrangler
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CF_API_TOKEN }}" > ~/.wrangler/config.toml
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CF_ACCOUNT_ID }}" >> ~/.wrangler/config.toml
          
      - name: Cache Wrangler
        uses: actions/cache@v4
        with:
          path: |
            ~/.wrangler
            ~/.npm
          key: ${{ runner.os }}-wrangler-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-wrangler-
      
      - name: Check and Create KV Namespace
        run: |
          wrangler telemetry disable
          
          function create_kv_namespace() {
            local namespace=$1
            local namespace_title="cloudpaste-$namespace"
            echo "Processing KV namespace: $namespace_title"
            
            echo "Listing KV namespaces..."
            LIST_OUTPUT=$(wrangler kv:namespace list --json || echo "[]")
            echo "KV namespaces list output: $LIST_OUTPUT"
            
            KV_ID=$(echo "$LIST_OUTPUT" | jq -r --arg title "$namespace_title" '.[] | select(.title == $title) | .id')
            echo "Found KV ID: $KV_ID"
            
            if [ -z "$KV_ID" ]; then
              echo "Creating KV namespace: $namespace_title"
              CREATE_OUTPUT=$(wrangler kv:namespace create "$namespace_title" --json)
              if [ $? -ne 0 ]; then
                echo "Failed to create KV namespace: $namespace_title"
                echo "Create output: $CREATE_OUTPUT"
                exit 1
              fi
              
              KV_ID=$(echo "$CREATE_OUTPUT" | jq -r '.id')
              if [ -z "$KV_ID" ]; then
                echo "Failed to extract KV ID from create output"
                exit 1
              fi
              echo "Created KV namespace with ID: $KV_ID"
            else
              echo "KV namespace already exists with ID: $KV_ID"
            fi
            
            echo "${namespace}_ID=$KV_ID" >> $GITHUB_ENV
            echo "Set environment variable ${namespace}_ID=$KV_ID"
          }
          
          create_kv_namespace "PASTE_STORE"
          create_kv_namespace "UPLOAD_STATUS"
      
      - name: Check and Create R2 Bucket
        run: |
          R2_BUCKET="cloudpaste-files"
          echo "Checking R2 bucket: $R2_BUCKET"
          
          BUCKET_LIST=$(wrangler r2 bucket list || echo "")
          if [ $? -ne 0 ]; then
            echo "Failed to list R2 buckets"
            exit 1
          fi
          
          if ! echo "$BUCKET_LIST" | grep -q "$R2_BUCKET"; then
            echo "Creating R2 bucket: $R2_BUCKET"
            if ! wrangler r2 bucket create "$R2_BUCKET" --location apac; then
              echo "Failed to create R2 bucket"
              exit 1
            fi
            echo "R2 bucket created successfully"
          else
            echo "R2 bucket already exists"
          fi

      - name: Update wrangler.toml
        run: |
          if [ -z "$PASTE_STORE_ID" ] || [ -z "$UPLOAD_STATUS_ID" ]; then
            echo "Error: KV namespace IDs are not set"
            exit 1
          fi
          
          # Create backup
          cp wrangler.toml wrangler.toml.bak
          
          # Update configuration
          sed -i \
            -e "s/id = \"temporary-id-12345\"/id = \"$PASTE_STORE_ID\"/" \
            -e "s/preview_id = \"temporary-id-12345\"/preview_id = \"$PASTE_STORE_ID\"/" \
            wrangler.toml
          
          echo "Updated wrangler.toml configuration:"
          diff wrangler.toml.bak wrangler.toml || true
      
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          command: deploy --var ADMIN_USERNAME:${{ secrets.ADMIN_USERNAME }} --var ADMIN_PASSWORD:${{ secrets.ADMIN_PASSWORD }}
        env:
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
